services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - observability
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'"]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - observability
    depends_on:
      elasticsearch:
        condition: service_healthy

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.17.10
    container_name: metricbeat
    environment:
      - strict.perms=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./beats/metric/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    restart: on-failure
    networks:
      - observability
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:7.17.10
    container_name: heartbeat
    volumes:
      - ./beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    environment:
      - strict.perms=false
      - setup.kibana.host=kibana:5601
    restart: on-failure
    networks:
      - observability
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy

  apm:
    image: docker.elastic.co/apm/apm-server-oss:7.17.10
    container_name: apm
    volumes:
      - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
    ports:
      - "8200:8200"
    restart: on-failure
    networks:
      - observability
    depends_on:
      elasticsearch:
        condition: service_healthy

  go-api:
    build: ./go-api/.
    container_name: go-api
    ports:
      - "8080:8080"
    networks:
      - observability
    depends_on:
      apm:
        condition: service_healthy

networks:
  observability:
    driver: bridge